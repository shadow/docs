(function() {var type_impls = {
"shadow_shim_helper_rs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#35-121\">source</a><a href=\"#impl-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.null\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#44-48\">source</a><h4 class=\"code-header\">pub const fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.null\" class=\"fn\">null</a>() -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#75-77\">source</a><h4 class=\"code-header\">pub const fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.cast\" class=\"fn\">cast</a>&lt;U: <a class=\"trait\" href=\"shadow_shim_helper_rs/util/trait.NoTypeInference.html\" title=\"trait shadow_shim_helper_rs::util::NoTypeInference\">NoTypeInference</a>&gt;(&amp;self) -&gt; <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;U::<a class=\"associatedtype\" href=\"shadow_shim_helper_rs/util/trait.NoTypeInference.html#associatedtype.This\" title=\"type shadow_shim_helper_rs::util::NoTypeInference::This\">This</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Cast from <code>ForeignPtr&lt;T&gt;</code> to <code>ForeignPtr&lt;U&gt;</code>.</p>\n<p>This uses the <a href=\"shadow_shim_helper_rs/util/trait.NoTypeInference.html\" title=\"trait shadow_shim_helper_rs::util::NoTypeInference\"><code>NoTypeInference</code></a> trait to prevent rust from inferring the target type of\nthe cast, which will hopefully help prevent accidental invalid casts.</p>\n<p>This does not check pointer alignment.</p>\n<p>Example:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>ptr: ForeignPtr&lt;u16&gt; = ForeignPtr::null();\n<span class=\"comment\">// cast to a u8 pointer\n</span><span class=\"kw\">let </span>ptr = ptr.cast::&lt;u8&gt;();</code></pre></div>\n<p>If the generic argument is omitted, it will fail to compile:</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>ptr: ForeignPtr&lt;u16&gt; = ForeignPtr::null();\n<span class=\"comment\">// cast to a u8 pointer\n</span><span class=\"kw\">let </span>ptr: ForeignPtr&lt;u8&gt; = ptr.cast();</code></pre></div>\n</div></details><section id=\"method.is_null\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#80-82\">source</a><h4 class=\"code-header\">pub const fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.is_null\" class=\"fn\">is_null</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#86-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.from_raw_ptr\" class=\"fn\">from_raw_ptr</a>(ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut T</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a <code>ForeignPtr</code> from a raw pointer to plugin memory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#94-97\">source</a><h4 class=\"code-header\">pub const fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.add\" class=\"fn\">add</a>(&amp;self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Add an offset to a pointer. <code>count</code> is in units of <code>T</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#101-104\">source</a><h4 class=\"code-header\">pub const fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.sub\" class=\"fn\">sub</a>(&amp;self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Subtract an offset from a pointer. <code>count</code> is in units of <code>T</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#110-112\">source</a><h4 class=\"code-header\">pub fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.into_raw\" class=\"fn\">into_raw</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Convert to a raw pointer. “safe” in itself, but keep in mind that it\nisn’t dereferenceable if it originated from a different virtual address\nspace.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#118-120\">source</a><h4 class=\"code-header\">pub fn <a href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html#tymethod.into_raw_mut\" class=\"fn\">into_raw_mut</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Convert to a raw pointer. “safe” in itself, but keep in mind that it\nisn’t dereferenceable if it originated from a different virtual address\nspace.</p>\n</div></details></div></details>",0,"shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cusize%3E-for-ForeignPtr%3C()%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#131-139\">source</a><a href=\"#impl-From%3Cusize%3E-for-ForeignPtr%3C()%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h3></section></summary><div class=\"docblock\"><p>Convert an integer to an untyped <code>ForeignPtr</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#133-138\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<usize>","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#177-182\">source</a><a href=\"#impl-Pointer-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#178-181\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Pointer","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu64%3E-for-ForeignPtr%3C()%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#142-150\">source</a><a href=\"#impl-From%3Cu64%3E-for-ForeignPtr%3C()%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>&gt;</h3></section></summary><div class=\"docblock\"><p>Convert an integer to an untyped <code>ForeignPtr</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#144-149\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u64>","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<section id=\"impl-StructuralEq-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#impl-StructuralEq-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section>","StructuralEq","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#168-175\">source</a><a href=\"#impl-Debug-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#169-174\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<section id=\"impl-Eq-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#impl-Eq-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section>","Eq","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<section id=\"impl-Copy-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#159\">source</a><a href=\"#impl-Copy-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section>","Copy","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#161-166\">source</a><a href=\"#impl-Clone-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#163-165\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSysCallReg%3E-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#393-403\">source</a><a href=\"#impl-From%3CSysCallReg%3E-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"union\" href=\"shadow_shim_helper_rs/syscall_types/union.SysCallReg.html\" title=\"union shadow_shim_helper_rs::syscall_types::SysCallReg\">SysCallReg</a>&gt; for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#395-402\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"union\" href=\"shadow_shim_helper_rs/syscall_types/union.SysCallReg.html\" title=\"union shadow_shim_helper_rs::syscall_types::SysCallReg\">SysCallReg</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SysCallReg>","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VirtualAddressSpaceIndependent-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#impl-VirtualAddressSpaceIndependent-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"vasi/trait.VirtualAddressSpaceIndependent.html\" title=\"trait vasi::VirtualAddressSpaceIndependent\">VirtualAddressSpaceIndependent</a>&gt; <a class=\"trait\" href=\"vasi/trait.VirtualAddressSpaceIndependent.html\" title=\"trait vasi::VirtualAddressSpaceIndependent\">VirtualAddressSpaceIndependent</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IGNORE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#associatedconstant.IGNORE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"vasi/trait.VirtualAddressSpaceIndependent.html#associatedconstant.IGNORE\" class=\"constant\">IGNORE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a> = _</h4></section></summary><div class='docblock'>Used by the derive macro to validate that fields are Vasi.</div></details></div></details>","VirtualAddressSpaceIndependent","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<section id=\"impl-StructuralPartialEq-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#impl-StructuralPartialEq-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section>","StructuralPartialEq","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<section id=\"impl-Pod-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#33\">source</a><a href=\"#impl-Pod-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"shadow_pod/trait.Pod.html\" title=\"trait shadow_pod::Pod\">Pod</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: 'static,</span></h3></section>","Pod","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-ForeignPtr%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#impl-PartialEq-for-ForeignPtr%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/shadow_shim_helper_rs/syscall_types.rs.html#22\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"shadow_shim_helper_rs/syscall_types/struct.ForeignPtr.html\" title=\"struct shadow_shim_helper_rs::syscall_types::ForeignPtr\">ForeignPtr</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","shadow_shim_helper_rs::syscall_types::UntypedForeignPtr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()