initSidebarItems({"fn":[["copy_dir_all","Copy the contents of the `src` directory to a new directory named `dst`. Permissions will be preserved."],["tilde_expansion",""]],"mod":[["byte_queue",""],["callback_queue","An event/listener framework to allow listeners to subscribe to event sources. To prevent recursive events (events which trigger new events) from leading to two listeners attempting to mutate the same state simultaneously, an event queue is used to defer new events until the current event has finished running."],["childpid_watcher",""],["counter","A counter that can be used to count frequencies of a set of objects. The counter starts with no keys. When an unknown key is incremented, the counter adds a new key to an internal map and sets the count for that key to 1. When a known key is incremented, the count for that key increases. The state of the counter can be extracted by converting it to a string, which lists the counts for all keys sorted with the heaviest hitters first. Currently, only String types are supported, but we may eventually support counting generic types."],["enum_passthrough",""],["give",""],["interval_map",""],["macros",""],["notnull",""],["pcap_writer",""],["perf_timer",""],["pod",""],["proc_maps",""],["random",""],["shm_cleanup",""],["status_bar",""],["stream_len",""],["syscall",""],["time",""]],"struct":[["HostTreePointer","A pointer to an object that is safe to dereference from any thread, if the Host lock for the specified host is held."],["Magic","Runtime memory error checking to help catch errors that C code is prone to. Can probably drop once C interop is removed."],["ObjectCounter","Helper for tracking the number of allocated objects."],["SyncSendPointer","A type that allows us to make a pointer Send + Sync since there is no way to add these traits to the pointer itself."]],"trait":[["IsSend","A trait we can use as a compile-time check to make sure that an object is Send."],["IsSync","A trait we can use as a compile-time check to make sure that an object is Sync."]]});