initSidebarItems({"fn":[["ipassignment_assignHost","Get an unused address and assign it to a node."],["ipassignment_assignHostWithIp","Assign an address to a node."],["ipassignment_free",""],["ipassignment_new",""],["networkgraph_free",""],["networkgraph_load",""],["networkgraph_nodeBandwidthDownBits","Get the downstream bandwidth of the graph node if it exists. A non-zero return value means that the node did not have a downstream bandwidth and that `bandwidth_down` was not updated."],["networkgraph_nodeBandwidthUpBits","Get the upstream bandwidth of the graph node if it exists. A non-zero return value means that the node did not have an upstream bandwidth and that `bandwidth_up` was not updated."],["networkgraph_nodeExists","Check if the node exists in the graph."],["routinginfo_free",""],["routinginfo_getLatencyNs","Get the packet latency from one host to another. The given addresses must be assigned to hosts."],["routinginfo_getReliability","Get the packet reliability from one host to another. The given addresses must be assigned to hosts."],["routinginfo_incrementPacketCount","Increment the number of packets sent from one host to another. The given addresses must be assigned to hosts."],["routinginfo_isRoutable","Checks if the addresses are assigned to hosts, and if so it must be routable since the graph is connected."],["routinginfo_new",""],["routinginfo_smallestLatencyNs",""]]});