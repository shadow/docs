searchState.loadedDescShard("pkg_config", 0, "A build dependency for Cargo libraries to find system …\nFailed to run <code>pkg-config</code>.\nDetected cross compilation without a custom sysroot.\nAborted because of <code>*_NO_PKG_CONFIG</code> environment variable.\nRepresents all reasons <code>pkg-config</code> might not succeed or be …\n<code>pkg-config</code> did not exit successfully after probing a …\n<code>pkg-config</code> did not exit successfully on the first attempt …\nAdd an argument to pass to pkg-config.\nIndicate that the library must be at least version <code>vers</code>.\nDefine whether metadata should be emitted for cargo …\nC/C++ definitions specified by -D\nDefine whether metadata should be emitted for cargo …\nIndicate that the library must be equal to version <code>vers</code>.\nDarwin framework search paths specified by -F\nDarwin frameworks specified by -framework\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRun <code>pkg-config</code> to get the value of a variable from a …\nC/C++ header include paths specified by -I\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLinker options specified by -Wl\nLibraries specified by -l\nLibrary file paths specified without -l\nLibrary search paths specified by -L\nCreates a new set of configuration options which are all …\nEnable or disable the <code>PKG_CONFIG_ALLOW_SYSTEM_CFLAGS</code> …\nEnable or disable the <code>PKG_CONFIG_ALLOW_SYSTEM_LIBS</code> …\nRun <code>pkg-config</code> to find the library <code>name</code>.\nSimple shortcut for using all default options for finding …\nIndicate that the library’s version must be in <code>range</code>.\nIndicate whether the <code>--static</code> flag should be passed.\nTrue if pkg-config is used for the host system, or …\nVersion specified by .pc file’s Version field")