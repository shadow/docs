searchState.loadedDescShard("shadow_shmem", 0, "In this module is a shared memory allocator that can be …\nThis module provides a simple interface to make system …\nA smart pointer class that holds a <code>Sync</code> and …\nThis struct is analogous to the <code>ShMemBlock</code> smart pointer, …\nSafe wrapper around our low-level, unsafe, nostd shared …\nThis struct exists as the intended singleton destructor …\nSafety\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafety\nThis function takes a serialized block and converts it …\nThis function frees a previously allocated block.\nThis function moves the input parameter into a …\nSafety\nSafety\nSafety\nSafety")