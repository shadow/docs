(function() {var implementors = {};
implementors["nix"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.60.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"nix/errno/enum.Errno.html\" title=\"enum nix::errno::Errno\">Errno</a>","synthetic":false,"types":["nix::errno::consts::Errno"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"nix/sys/signal/enum.Signal.html\" title=\"enum nix::sys::signal::Signal\">Signal</a>","synthetic":false,"types":["nix::sys::signal::Signal"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"nix/sys/termios/enum.BaudRate.html\" title=\"enum nix::sys::termios::BaudRate\">BaudRate</a>","synthetic":false,"types":["nix::sys::termios::BaudRate"]}];
implementors["shadow_rs"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.60.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"shadow_rs/core/support/simulation_time/struct.SimulationTime.html\" title=\"struct shadow_rs::core::support::simulation_time::SimulationTime\">SimulationTime</a>","synthetic":false,"types":["shadow_rs::core::support::simulation_time::SimulationTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"libc/unix/struct.timespec.html\" title=\"struct libc::unix::timespec\">timespec</a>&gt; for <a class=\"struct\" href=\"shadow_rs/core/support/simulation_time/struct.SimulationTime.html\" title=\"struct shadow_rs::core::support::simulation_time::SimulationTime\">SimulationTime</a>","synthetic":false,"types":["shadow_rs::core::support::simulation_time::SimulationTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"shadow_rs/core/support/simulation_time/struct.SimulationTime.html\" title=\"struct shadow_rs::core::support::simulation_time::SimulationTime\">SimulationTime</a>&gt; for <a class=\"struct\" href=\"libc/unix/struct.timespec.html\" title=\"struct libc::unix::timespec\">timespec</a>","synthetic":false,"types":["libc::unix::timespec"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"libc/unix/struct.timeval.html\" title=\"struct libc::unix::timeval\">timeval</a>&gt; for <a class=\"struct\" href=\"shadow_rs/core/support/simulation_time/struct.SimulationTime.html\" title=\"struct shadow_rs::core::support::simulation_time::SimulationTime\">SimulationTime</a>","synthetic":false,"types":["shadow_rs::core::support::simulation_time::SimulationTime"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"shadow_rs/core/support/simulation_time/struct.SimulationTime.html\" title=\"struct shadow_rs::core::support::simulation_time::SimulationTime\">SimulationTime</a>&gt; for <a class=\"struct\" href=\"libc/unix/struct.timeval.html\" title=\"struct libc::unix::timeval\">timeval</a>","synthetic":false,"types":["libc::unix::timeval"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"shadow_rs/host/descriptor/socket/unix/enum.UnixSocketType.html\" title=\"enum shadow_rs::host::descriptor::socket::unix::UnixSocketType\">UnixSocketType</a>","synthetic":false,"types":["shadow_rs::host::descriptor::socket::unix::UnixSocketType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"shadow_rs/host/syscall/format/enum.StraceFmtMode.html\" title=\"enum shadow_rs::host::syscall::format::StraceFmtMode\">StraceFmtMode</a>","synthetic":false,"types":["shadow_rs::host::syscall::format::StraceFmtMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"shadow_rs/host/thread/struct.ThreadId.html\" title=\"struct shadow_rs::host::thread::ThreadId\">ThreadId</a>","synthetic":false,"types":["shadow_rs::host::thread::ThreadId"]}];
implementors["test_pthreads"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"enum\" href=\"test_pthreads/enum.ThreadRetVal.html\" title=\"enum test_pthreads::ThreadRetVal\">ThreadRetVal</a>","synthetic":false,"types":["test_pthreads::ThreadRetVal"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()